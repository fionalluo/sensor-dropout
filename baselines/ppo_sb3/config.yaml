defaults:
  exp_name: ppo_sb3_baseline
  seed: 0
  torch_deterministic: true
  cuda: true
  track: true
  wandb_project: "sb3-ppo-2"
  wandb_entity: null
  capture_video: false

  task: gymnasium_TigerDoorKey-v0
  total_timesteps: 500000
  num_envs: 8
  use_wandb: true

  # Teacher and student observation keys
  keys: {mlp_keys: '.*', cnn_keys: '.*'}
  eval_keys:
    env1:
      mlp_keys: '.*'
      cnn_keys: '.*'
    env2:
      mlp_keys: '.*'
      cnn_keys: '.*'
    env3:
      mlp_keys: '.*'
      cnn_keys: '.*'
    env4:
      mlp_keys: '.*'
      cnn_keys: '.*'
    env5:
      mlp_keys: '.*'
      cnn_keys: '.*'
    env6:
      mlp_keys: '.*'
      cnn_keys: '.*'
    env7:
      mlp_keys: '.*'
      cnn_keys: '.*'
    env8:
      mlp_keys: '.*'
      cnn_keys: '.*'

  save_model: false
  log_keys_video: [image]

  # Environment settings
  env:
    atari: {size: [64, 64], repeat: 4, sticky: True, gray: False, actions: all, lives: unused, noops: 0, resize: opencv}
    dmlab: {size: [64, 64], repeat: 4, episodic: True}
    minecraft: {size: [64, 64], break_speed: 100.0}
    dmc: {size: [64, 64], repeat: 2, camera: -1}
    loconav: {size: [64, 64], repeat: 2, camera: -1}
    gym: {obs_key: state}
    robopianist: {render_image: true}
  
  # Evaluation settings
  eval:
    eval_interval: 1000  # Evaluate every 1000 steps
    num_eval_episodes: 10  # Number of episodes to evaluate
    eval_envs: 4  # Number of parallel environments for evaluation
    video_log_interval: 1  # Log videos every evaluation call
    num_eval_configs: 4

# ====================
# Named Configs
# ====================

# Tiger Door Key
gymnasium_tigerdoorkey: &tigerdoorkey_base
  task: gymnasium_TigerDoorKey-v0
  total_timesteps: 400000
  keys: {mlp_keys: '\b(neighbors|door|doors_unlocked|position|has_key)\b', cnn_keys: '^$'}
  eval_keys:
    env1:
      mlp_keys: '\b(neighbors|door|doors_unlocked|position|has_key)\b'
      cnn_keys: '^$'

    env2: # must press button to reveal tiger/treasure up-down relative position. starts with key
      mlp_keys: '\b(neighbors_unprivileged_nokey|door_unprivileged|doors_unlocked|position|has_key)\b'
      cnn_keys: '^$'

    env3:  # must get key to reveal unlocked doors. starts with button
      mlp_keys: '\b(neighbors_unprivileged_nobutton|door|doors_unlocked_unprivileged|position|has_key)\b'
      cnn_keys: '^$'

    env4:  # must press button and get key to reveal unlocked doors and tiger/treasure relative position. starts with nothing
      mlp_keys: '\b(neighbors_unprivileged|door_unprivileged|doors_unlocked_unprivileged|position|has_key)\b'
      cnn_keys: '^$'

  exp_name: "tigerdoorkey_ppo_sb3"

gymnasium_tigerdoorkeylarge:
  << : *tigerdoorkey_base
  task: "gymnasium_tigerdoorkeylarge"
  total_timesteps: 500000
  exp_name: "tigerdoorkeylarge_ppo_sb3"

gymnasium_maze: &maze_base
  task: gymnasium_Maze7x7-v0
  total_timesteps: 400000
  keys: {mlp_keys: '\b(goal_position|position|neighbors_3x3|neighbors_5x5)\b', cnn_keys: '^$'}  # omit the distance key
  eval_keys:  # Note that neighbors_5x5 only includes neighbors not in the 3x3 neighbors (they are disjoint)
    env1:  # Goal position, neighbors 5x5
      mlp_keys: '\b(goal_position|position|neighbors_3x3|neighbors_5x5)\b'
      cnn_keys: '^$'
    
    env2:  # Goal position, neighbors_3x3
      mlp_keys: '\b(goal_position|position|neighbors_3x3)\b'
      cnn_keys: '^$'
    
    env3:  # No goal position, neighbors_3x3
      mlp_keys: '\b(goal_position_unprivileged|position|neighbors_3x3)\b'
      cnn_keys: '^$'

    env4:  # No goal position, neighbors_5x5
      mlp_keys: '\b(goal_position_unprivileged|position|neighbors_3x3|neighbors_5x5)\b'
      cnn_keys: '^$'
    
    env5: # No goal position, neighbors_3x3 unprivileged
      mlp_keys: '\b(goal_position_unprivileged|position|neighbors_3x3_unprivileged)\b'
      cnn_keys: '^$'
    
    env6: # No goal position, neighbors_5x5 unprivileged
      mlp_keys: '\b(goal_position_unprivileged|position|neighbors_3x3_unprivileged|neighbors_5x5_unprivileged)\b'
      cnn_keys: '^$'

  exp_name: "maze_ppo_sb3"

gymnasium_maze11:
  << : *maze_base
  task: gymnasium_Maze11x11-v0
  total_timesteps: 1500000
  exp_name: "maze11_ppo_sb3"

# Blind Pick environment
gymnasium_blindpick: &blindpick_base
  task: gymnasium_FOFixedGripper2DBlind7cmPick-v0
  total_timesteps: 5000000
  num_envs: 32
  log_keys_video: [camera_front]
  keys: {mlp_keys: '.*', cnn_keys: '.*'} # robot_state, touch, camera_front, camera_side, gripper_camera_rgb
  eval_keys:
    env1: # full privileged observations
      mlp_keys: '.*'
      cnn_keys: '.*'
    env2:  # robot state, NO touch, but using all cameras
      mlp_keys: 'robot_state'
      cnn_keys: '.*'
    env3:  # NO robot state, touch, but using all cameras
      mlp_keys: 'touch'
      cnn_keys: '.*'
    env4: # NO robot state, NO touch, ONLY all cameras
      mlp_keys: '^$'
      cnn_keys: '.*'
    env5:  # robot state, touch, but only wrist camera
      mlp_keys: '.*'
      cnn_keys: 'gripper_camera_rgb'
    env6:  # no robot state, touch, but only front camera
      mlp_keys: '.*'
      cnn_keys: 'camera_front'
    env7:  # robot state, touch, but only side camera
      mlp_keys: '.*'
      cnn_keys: 'camera_side'

  exp_name: "blindpick_ppo_sb3"

# Blind Pick with different sensor configurations
blindpick_oracle_state:
  << : *blindpick_base
  keys: {mlp_keys: r'\b(robot_state|obj_state)\b', cnn_keys: '^$'}
  eval_keys:
    env1: # oracle state (robot_state + obj_state)
      mlp_keys: r'\b(robot_state|obj_state)\b'
      cnn_keys: '^$'
  exp_name: "blindpick_oracle_state_ppo_sb3"

blindpick_vision_only:
  << : *blindpick_base
  keys: {mlp_keys: '^$', cnn_keys: '.*'}
  eval_keys:
    env1: # vision only
      mlp_keys: '^$'
      cnn_keys: '.*'
  exp_name: "blindpick_vision_only_ppo_sb3"

blindpick_touch_vision:
  << : *blindpick_base
  keys: {mlp_keys: 'touch', cnn_keys: '.*'}
  eval_keys:
    env1: # touch + vision
      mlp_keys: 'touch'
      cnn_keys: '.*'
  exp_name: "blindpick_touch_vision_ppo_sb3"

blindpick_robot_state_vision:
  << : *blindpick_base
  keys: {mlp_keys: 'robot_state', cnn_keys: '.*'}
  eval_keys:
    env1: # robot state + vision
      mlp_keys: 'robot_state'
      cnn_keys: '.*'
  exp_name: "blindpick_robot_state_vision_ppo_sb3" 